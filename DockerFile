# Use the official Python image from the DockerHub
FROM python:3.8-alpine

# # Install Rust and Cargo
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Set the working directory in docker
WORKDIR /app

# Set environment variables
# PYTHONDONTWRITEBYTECODE: Prevents Python from writing pyc files to disc
# PYTHONUNBUFFERED: Prevents Python from buffering stdout and stderr
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=off

# Install system dependencies
RUN apk update \
    && apk add --no-cache gcc postgresql-dev \
    && rm -rf /var/cache/apk/*


# Install PDM (Python dependency manager) and configure it
RUN pip install pdm && pdm config python.use_venv false

# Copy the pyproject.toml and pdm.lock files
COPY pyproject.toml pdm.lock ./

COPY README.md ./

RUN pdm fix

# Install project dependencies
RUN pdm sync

# Copy the content of the local src directory to the working directory
COPY src/ ./src/

# Specify the command to run on container start
CMD ["pdm", "run", "server"]